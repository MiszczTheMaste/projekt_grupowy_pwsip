# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Products\Repository\ProductRepository:
        arguments:
            $connection: '@doctrine.dbal.default_connection'
            
    App\Products\QueryHandler\GetProductCollectionHandler:
        arguments:
            $repository: '@App\Products\Repository\ProductRepository'

    App\Products\Controller\GetProductCollectionAction:
        public: true
        class: App\Products\Controller\GetProductCollectionAction
        arguments:
            $handler: '@App\Products\QueryHandler\GetProductHandler'

    App\Products\QueryHandler\GetProductHandler:
        arguments:
            $repository: '@App\Products\Repository\ProductRepository'
      
    App\Products\Controller\GetProductAction:
        public: true
        arguments:
            $handler: '@App\Products\Repository\ProductRepository'  
            
    App\Products\CommandHandler\PutProductHandler:
        arguments:
            $repository: '@App\Products\Repository\ProductRepository'
      
    App\Products\Controller\PutProductAction:
        public: true
        arguments:
            $handler: '@App\Products\CommandHandler\PutProductHandler'

    App\Auth\Controller\RegistrationAction:
        public: true
        arguments:
            $handler: '@App\Auth\CommandHandler\RegistrationHandler'   

    App\Auth\CommandHandler\RegistrationHandler: